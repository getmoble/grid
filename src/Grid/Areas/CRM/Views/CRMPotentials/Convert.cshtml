@model Grid.Features.CRM.ViewModels.ConvertLeadViewModel

<h2>Convert Lead</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LeadId)

        <div class="form-group">
            <div class="col-lg-3">
                <label class="pull-right" for="CreateAccount">Create Account on Conversion</label>
            </div>
            <div class="col-lg-9">
                @Html.EditorFor(model => model.CreateAccount, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-lg-3">
                <label class="pull-right" for="CreatePotential">Create Potential on Conversion</label>
            </div>
            <div class="col-lg-9">
                @Html.EditorFor(model => model.CreatePotential, new { htmlAttributes = new { @class = "" } })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToUserId, "Assigned To User", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("AssignedToUserId", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignedToUserId, "Assigned To User", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("AssignedToUserId", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.AssignedToUserId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedAmount, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedAmount, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ExpectedAmount, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpectedCloseDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpectedCloseDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ExpectedCloseDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EnquiredOn, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.EnquiredOn, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.EnquiredOn, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalesStageId, "Sales Stage", new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("SalesStageId", null, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.SalesStageId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Convert" class="btn btn-default"/>
            </div>
        </div>
    </div>
}