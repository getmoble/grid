@model Grid.Features.Settings.ViewModels.SettingsViewModel

@using (Html.BeginForm())
{
    <div class="btn-group pull-right" role="group">
        <input type="submit" value="Update" class="btn btn-default" />
    </div>

    <h2>Update Settings</h2>
    <br/>
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="active"><a href="#general" aria-controls="home" role="tab" data-toggle="tab">General</a></li>
        <li role="presentation"><a href="#email" aria-controls="profile" role="tab" data-toggle="tab">Email</a></li>
        <li role="presentation"><a href="#blob" aria-controls="messages" role="tab" data-toggle="tab">Blob Storage</a></li>
        <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Slack</a></li>
        <li role="presentation"><a href="#poc" aria-controls="settings" role="tab" data-toggle="tab">Contacts</a></li>
        <li role="presentation"><a href="#tms" aria-controls="settings" role="tab" data-toggle="tab">TimeSheet Settings</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="general">
            <div class="col-lg-6">
                <div class="form-horizontal">
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplicationName, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ApplicationName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.ApplicationName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="email">
            <div class="col-lg-6">
                <div class="form-horizontal">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Server, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Server, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Server, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Port, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Port, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Port, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Username, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <hr/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FromName, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FromName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FromName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FromEmail, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FromEmail, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.FromEmail, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <hr/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AdminEmail, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AdminEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AdminEmail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="blob">
            <div class="col-lg-6">
                <div class="form-horizontal">
                    Azure Blob Storage Settings
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BlobAccountName, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BlobAccountName, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.BlobAccountName, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BlobAccountKey, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BlobAccountKey, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.BlobAccountKey, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-horizontal">
                    DropBox Settings
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DropBoxApplicationKey, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DropBoxApplicationKey, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.DropBoxApplicationKey, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DropBoxApplicationSecret, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DropBoxApplicationSecret, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.DropBoxApplicationSecret, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="settings">
            <div class="col-lg-6">
                <div class="form-horizontal">
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SlackConsumerKey, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SlackConsumerKey, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.SlackConsumerKey, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SlackConsumerSecret, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SlackConsumerSecret, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.SlackConsumerSecret, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SlackScopes, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SlackScopes, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.SlackScopes, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="poc">
            <div class="col-lg-8">
                <div class="form-horizontal">
                    <br/>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ITDepartmentLevel1, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">                         
                            @Html.DropDownList("ITDepartmentLevel1", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.ITDepartmentLevel1, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ITDepartmentLevel2, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("ITDepartmentLevel2", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.ITDepartmentLevel2, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HRDepartmentLevel1, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("HRDepartmentLevel1", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.HRDepartmentLevel1, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.HRDepartmentLevel2, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("HRDepartmentLevel2", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.HRDepartmentLevel2, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesDepartmentLevel1, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("SalesDepartmentLevel1", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.SalesDepartmentLevel1, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.SalesDepartmentLevel2, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownList("SalesDepartmentLevel2", null, new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.SalesDepartmentLevel2, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="tms">
            <div class="col-lg-8">
                <div class="form-horizontal">
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaxTimeSheetMisses, new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaxTimeSheetMisses, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.MaxTimeSheetMisses, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.MaxTimeSheetApprovalMisses, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaxTimeSheetApprovalMisses, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaxTimeSheetApprovalMisses, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


